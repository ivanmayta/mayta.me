---
//import { languages } from "@cv"
import Section from "@/components/Section.astro"
import Mail from "@/icons/Mail.astro"
import Phone from "@/icons/Phone.astro"
import X from "@/icons/X.astro"
import LinkedIn from "@/icons/LinkedIn.astro"
import GitHub from "@/icons/GitHub.astro"
import Portafolio from "@/icons/Portafolio.astro"
import Cv from "@/icons/Cv.astro"
import WorldMap from "@/icons/WorldMap.astro"
import type { SocialIcon } from "@/types"
import type { Basics, Languages } from "@/cv"

const { basics, languages } = Astro.props as {
    basics: Basics
    languages: Languages[]
}

const { name, label, location, profiles, phone, email } = basics
const { city, region } = location
const SOCIAL_ICONS: SocialIcon = {
    GitHub,
    LinkedIn,
    X,
    Portafolio,
    Cv,
}

const linkedInfo = profiles.find(({ network }) => network === "LinkedIn")
//const linkedUrl = linkedInfo?.url

const printInfo = [email, phone].filter(Boolean).join(" • ")
const languagesInfo = languages
    .map(({ language, fluency }) => `${language} ${fluency}`)
    .join(" • ")
//const formatUrl = (url: string) => url.replace("https://", "")
---

<Section>
    <div class="container">
        <div class="info">
            <h1>{name}</h1>
            <h2>{label}</h2>
            <p>{printInfo}</p>
            <p>{languagesInfo}</p>
            <span>
                <WorldMap />
                {city}, {region}
            </span>
            <span class="print_urls">
                {
                    profiles.map(({ network, url, username }) => {
                        return (
                            <a
                                href={url}
                                title={`Visitar el perfil de ${name} en ${network}`}
                                target="_blank"
                                rel="noopener noreferrer"
                            >
                                {network}:{username}
                            </a>
                        )
                    })
                }
            </span>

            <!-- 
      <footer class="print">
        {printInfo}
      </footer>
        -->

            <footer class="no-print">
                {
                    email && (
                        <a
                            href={`mailto:${email}`}
                            title={`Enviar un correo electrónico a ${name} al correo ${email}`}
                            target="_blank"
                            rel="noopener noreferrer"
                        >
                            <Mail />
                        </a>
                    )
                }
                {
                    phone && (
                        <a
                            href={`tel:${phone}`}
                            title={`Llamar por teléfono a ${name} al número ${phone}`}
                            target="_blank"
                            rel="noopener noreferrer"
                        >
                            <Phone />
                        </a>
                    )
                }
                {
                    profiles.map(({ network, url, username }) => {
                        const Icon = SOCIAL_ICONS[network]

                        return (
                            <a
                                href={url}
                                title={`Visitar el perfil de ${name} en ${network}`}
                                target="_blank"
                                rel="noopener noreferrer"
                            >
                                <Icon />
                            </a>
                        )
                    })
                }
            </footer>
        </div>
        <!-- 
    <figure>
      <img src={image} alt={name} />
    </figure>
  -->
    </div>
</Section>

<style>
    .print_urls {
        display: none;
        margin-top: 0.3rem;
        flex-direction: row;
        gap: 2rem;
    }
    .container {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        gap: 1rem;
    }

    .info {
        display: flex;
        text-align: center;
        align-items: center;
        flex-direction: column;
        gap: 0rem;
        padding-right: 32px;
    }

    h1 {
        margin-bottom: 8px;
        font-weight: 700;
        line-height: 1.5;
        font-size: 2rem;
    }

    h2 {
        color: #444;
        font-weight: 500;
        font-size: 1.1rem;
        text-wrap: balance;
    }

    img {
        aspect-ratio: 1 / 1;
        object-fit: cover;
        width: 128px;
        border-radius: 16px;
    }

    span {
        color: #666;
        display: flex;
        align-items: center;
        gap: 0.25rem;
        font-size: 0.85rem;
        letter-spacing: -0.05rem;
    }

    footer {
        color: #555;
        font-size: 0.65rem;
        display: flex;
        gap: 4px;
        margin-top: 8px;
    }

    footer a {
        color: #777;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border: 1px solid #eee;
        padding: 4px;
        height: 32px;
        width: 32px;
        border-radius: 6px;
        transition: all 0.3s ease;
    }

    footer a:hover {
        background: #eee;
        border: 1px solid #ddd;
    }

    @media (width <= 700px) {
        .container {
            flex-direction: column-reverse;
        }

        .info {
            justify-content: center;
            align-items: center;
            padding-right: 0;
            text-align: center;
        }

        figure {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        h2 {
            text-wrap: balance;
        }

        figure {
            margin: 0 auto;
        }
    }
</style>
