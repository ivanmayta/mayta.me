---
import LanguagePicker from "@/components/LanguagePicker.astro"
import type { Basics } from "@/cv"
import { getLangFromUrl, useTranslations } from "@/i18n/utils"
import { ViewTransitions } from "astro:transitions"

interface Props {
    title: string
}

const { title } = Astro.props

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)

const basics = t("basics") as Basics
const { summary, image, url } = basics
---

<!doctype html>
<html lang={lang}>
    <head>
        <meta charset="UTF-8" />
        <title>{title}</title>
        <meta name="description" content={summary} />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <link rel="preload" as="image" href={image} />

        <meta property="og:url" content={url} />
        <meta property="og:type" content="website" />
        <meta property="og:title" content={title} />
        <meta property="og:description" content={summary} />
        <meta property="og:image" content="" />

        <meta name="twitter:card" content="summary_large_image" />
        <meta property="twitter:domain" content={url.split("//")[1] ?? ""} />
        <meta property="twitter:url" content={url} />
        <meta name="twitter:title" content={title} />
        <meta name="twitter:description" content={summary} />
        <meta name="twitter:image" content="" />
        <ViewTransitions />
    </head>
    <body>
        <LanguagePicker />

        <slot transition:animate="fade" />
    </body>
</html>

<style is:global>
    html {
        font-family:
            ui-monospace,
            SFMono-Regular,
            Menlo,
            Monaco,
            Lucida Console,
            "Courier New",
            Courier,
            monospace;
        background: #fff;
        letter-spacing: -0.025rem;
    }

    body,
    figure {
        margin: 0;
        padding: 0;
    }

    a {
        text-decoration: none;
    }

    ul {
        list-style: none;
        margin: 0;
        padding: 0;
    }

    *,
    *::before,
    *::after {
        box-sizing: border-box;
    }

    h1,
    h2,
    h3,
    h4 {
        margin: 0;
        font-family:
            system-ui,
            -apple-system,
            BlinkMacSystemFont,
            "Segoe UI",
            Roboto,
            Oxygen,
            Ubuntu,
            Cantarell,
            "Open Sans",
            "Helvetica Neue",
            sans-serif;
    }

    p {
        color: #666;
        font-size: 0.9rem;
        line-height: 1.25rem;
        margin: 0;
        text-wrap: pretty;
    }

    .print {
        display: none !important;
    }

    @media print {
        html {
            font-size: 12px;
        }

        .no-print {
            display: none !important;
        }

        .print {
            display: block !important;
        }
        .print_urls {
            display: flex !important;
            text-decoration: underline;
        }

        astro-dev-toolbar {
            display: none !important;
        }

        article {
            break-inside: avoid;
        }
    }

    @keyframes typeWriter {
        0% {
            width: 0;
            opacity: 1;
        }
        100% {
            width: 100%;
            opacity: 1;
        }
    }

    slot {
        display: inline-block;
        white-space: nowrap;
        overflow: hidden;
        width: 0; /* Inicia con el texto oculto */
        animation: typeWriter 2s steps(30) 1s forwards; /* 2s es el tiempo de la animación */
        font-family: "Courier New", Courier, monospace; /* Estilo de fuente tipo máquina de escribir */
    }

    /* Esto asegura que cada letra aparece como si se estuviera escribiendo */
    slot[transition-state="entering"] {
        animation-name: typeWriter;
    }
</style>
